{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix to add to name of new resources. Must be <= 9 characters."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Resource Location."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2ms",
      "metadata": {
        "description": "Virtual Machine Size."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'), '-swin')]",
      "metadata": {
        "description": "Name of the Workstation"
      }
    },
    "adminName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine User Name ."
      }
    },
    "adminPass": {
      "type":"securestring",
      "metadata": {
        "type": "password",
        "description": "Admin password."
      }
    },
    "vNetName": {
      "type": "string",
      "metadata": {
        "description": "Teradici Agent Virtual Network name"
      }
    },
    "vNetRGName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VNet Resource Group"
      }
    },
    "vNetARPrefixes": {
      "type": "array",
      "defaultValue": [
        "10.0.0.0/26"
      ],
      "metadata": {
        "description": "Address prefix of the virtual network"
      }
    },
    "subNetName": {
      "type": "string",
      "defaultValue": "[concat(parameters('vmName'),'-subnet')]",
      "metadata": {
        "description": "Teradici Agent Subnet name"
      }
    },
    "subNetARPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/28",
      "metadata": {
        "description": "Subnet prefix of the virtual network"
      }
    },
    "publicIpName": {
      "type": "string",
      "defaultValue": "[concat(parameters('vmName'),'-ipaddress')]",
      "metadata": {
        "description": "Unique public ip address name"
      }
    },
    "publicIpDns": {
      "type": "string",
      "defaultValue": "[concat('tera', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Unique DNS Public IP attached the VM"
      }
    },
    "publicIpAllocationMethod": {
      "type": "string",
      "defaultValue": "Static",
      "metadata": {
        "description": "Public IP Allocation Method"
      }
    },
    "publicIpSku": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "SKU number "
      }
    },
    "publicIpRGName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Public IP Resource Group"
      }
    },
    "publicIpNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "metadata": {
        "description": "Public IP New or Existing?"
      }
    },
    "ad_service_account_password": {
    "type": "string",
      "metadata": {
        "description": "Active Directory Service Account password"
      }
    },
    "ad_service_account_username": {
    "type": "string",
      "metadata": {
        "description": "Active Directory Service Account username"
      }
    },
    "domain_name": {
    "type": "string",
      "metadata": {
        "description": "Name of the domain to join"
      }
    },
    "TeradiciRegKey": {
      "type": "securestring",
      "metadata": { "description": "Teradici temporary Registration Key" }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
          "description": "The base URI where artifacts required by this template are located including a trailing '/'"
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
  },
  "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
          "description": "The sasToken required to access _artifactsLocation."
      },
      "defaultValue": ""
  }
},
 
"variables": {
  "vmName": "[parameters('vmName')]",
  "location": "[parameters('location')]",
  "vmSize": "[parameters('vmSize')]",
  "domainNameLabel": "[parameters('publicIpDns')]",
  "VMDiskType": "StandardSSD_LRS",
    
  "pubIpName": "[parameters('publicIpName')]",
  "pubIpId": "[resourceId(parameters('publicIpRGName'), 'Microsoft.Network/publicIPAddresses',variables('pubIpName'))]",
  "ipconfName": "[concat(variables('vmName'),'-ipconf')]",

  "vnetName": "[parameters('vNetName')]",
  "vnetId": "[resourceId(parameters('vNetRGName'), 'Microsoft.Network/virtualNetworks', variables('vnetName'))]",
  "subnetName": "[parameters('subnetName')]",
  "SubNetID":"[ resourceId(parameters('vNetRGName'), 'Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('subnetName'))]",
    
  "nicName": "[concat(variables('vmName'),'-nic')]",
  "nicId": "[resourceId(parameters('vNetRGName'), 'Microsoft.Network/networkInterfaces',variables('nicName'))]",
  
  "ExtName": "[concat(variables('vmName'),'/CustomExtV0.1')]",
  "nsgName": "[concat(variables('vmName'),'-nsg')]",
  "nsgId": "[resourceId(parameters('vNetRGName'), 'Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",

  "VNetAddressSpacePrefix": "[first(parameters('vNetARPrefixes'))]",
  "SNetAddressRangePrefix": "[parameters('subnetARPrefix')]",
  
  "PCoIPAgentEXE": "pcoip-agent-standard_19.11.0.exe",
  "WallPaperJPG": "img0.jpg",
  "Script2Run": "DeployPCoIPAgent.ps1",
  "WallPaperPath": "[concat(parameters('_artifactsLocation'), variables('WallPaperJPG'), parameters('_artifactsLocationSasToken'))]",
  "PCoIPAgentPath": "[concat(parameters('_artifactsLocation'), variables('PCoIPAgentEXE'), parameters('_artifactsLocationSasToken'))]",
  "Sript2RunUri" :"[ uri(parameters('_artifactsLocation'),concat(variables('Script2Run'), parameters('_artifactsLocationSasToken')))]",

  "ScriptParams":  "[concat(' -TeraRegKey ', parameters('TeradiciRegKey'),' -PCoIPAgentURI ' ,variables('PCoIPAgentPath') ,' -PCoIPAgentEXE ', variables('PCoIPAgentEXE'),' -WallPaperURI ', variables('WallPaperPath'),' -domain_name ', parameters('domain_name'),' -ad_service_account_username ', parameters('ad_service_account_username'),' -ad_service_account_password ', parameters('ad_service_account_password'))]",
  "cmdToExecute":  "[concat('powershell.exe -ExecutionPolicy Unrestricted -File ',variables('Script2Run'),  variables('ScriptParams'))]",
    
  "nsgRules": [
    {
      "name": "PCoIPtcp",
      "properties": {
        "priority": 301,
        "protocol": "TCP",
        "access": "Allow",
        "direction": "Inbound",
        "sourceAddressPrefix": "*",
        "sourcePortRange": "*",
        "destinationAddressPrefix": "*",
        "destinationPortRange": "4172"
      }
    },
    {
      "name": "PCoIPudp",
      "properties": {
        "priority": 302,
        "protocol": "UDP",
        "access": "Allow",
        "direction": "Inbound",
        "sourceAddressPrefix": "*",
        "sourcePortRange": "*",
        "destinationAddressPrefix": "*",
        "destinationPortRange": "4172"
      }
    },
    {
      "name": "CertAuthHTTPS",
      "properties": {
        "priority": 303,
        "protocol": "TCP",
        "access": "Allow",
        "direction": "Inbound",
        "sourceAddressPrefix": "*",
        "sourcePortRange": "*",
        "destinationAddressPrefix": "*",
        "destinationPortRange": "443"
      }
    },
    {
      "name": "TeradiciCom",
      "properties": {
        "priority": 304,
        "protocol": "TCP",
        "access": "Allow",
        "direction": "Inbound",
        "sourceAddressPrefix": "*",
        "sourcePortRange": "*",
        "destinationAddressPrefix": "*",
        "destinationPortRange": "60443"
      }
    },
    {
      "name": "AllowSSH",
      "properties": {
        "priority": 400,
        "protocol": "*",
        "access": "Allow",
        "direction": "Inbound",
        "sourceAddressPrefix": "*",
        "sourcePortRange": "*",
        "destinationAddressPrefix": "*",
        "destinationPortRange": "22"
      }
    }
  ]
},
"resources": [
  { 
    "type": "Microsoft.Resources/deployments",
    "apiVersion": "2019-05-01",
    "name": "pid-0d95c7be-a922-5be2-841a-5381655bf4f1",
    "properties": {
        "mode": "Incremental",
        "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "resources": []
        }
    }
  },
  
  {
    "condition": "[equals(parameters('publicIpNewOrExisting'), 'new')]",
    "type": "Microsoft.Network/publicIPAddresses",
    "name": "[variables('pubIpName')]",
    "apiVersion": "2019-04-01",
    "sku": { "name": "[parameters('publicIpSku')]" },
    "location": "[variables('location')]",
    "properties": {
      "publicIPAllocationMethod": "[parameters('publicIpAllocationMethod')]",
      "dnsSettings": {
        "domainNameLabel": "[variables('domainNameLabel')]"
      }
    }
  },
  {
    "type": "Microsoft.Network/networkSecurityGroups",
    "name": "[variables('nsgName')]",
    "apiVersion": "2018-11-01",
    "location": "[variables('location')]",
    "properties": {
      "securityRules": "[variables('nsgRules')]"
    }
    
  },
  {
    "type": "Microsoft.Network/virtualNetworks",
    "name": "[variables('vNetName')]",
    "apiVersion":  "2019-04-01",
    "location": "[variables('location')]",
    "properties": {
      "addressSpace": {
        "addressPrefixes": [            
          "[variables('VNetAddressSpacePrefix')]"
        ]
      },
      "subnets": [
        {
          "name": "[variables('subnetName')]",
          "properties": {
            "addressPrefix": "[variables('SNetAddressRangePrefix')]"
          }
        }
      ]
    }
  },
  {
    "type": "Microsoft.Network/networkInterfaces",
    "name": "[variables('nicName')]",
    "apiVersion": "2019-04-01",
    "location": "[variables('location')]",
    "dependsOn": [
      "[variables('pubIpId')]",
      "[variables('vnetId')]",
      "[variables('nsgId')]"
    ],
    "properties": {
      "ipConfigurations": [
        {
          "name": "[variables('ipconfName')]",
          "properties": {
            "subnet": {
              "id": "[variables('SubNetID')]"
            },
            "privateIPAllocationMethod": "Dynamic",
            "publicIPAddress": {
              "id": "[variables('pubIpId')]"
            }
          }
        }
      ],
      "networkSecurityGroup": {
        "id": "[variables('nsgId')]"
      }
    }
  },
  {
    "type": "Microsoft.Compute/virtualMachines",
    "name": "[variables('vmName')]",
    "apiVersion": "2019-03-01",
    "location": "[variables('location')]",
    "dependsOn": [
      "[variables('nicId')]"
    ],
    "properties": {
      "hardwareProfile": {
        "vmSize": "[variables('vmSize')]"
      },
      "storageProfile": {
        "imageReference":  {
          "publisher": "MicrosoftWindowsServer",
          "offer": "WindowsServer",
          "sku": "2016-Datacenter",
          "version": "latest"
        },
        "osDisk": {
          "osType": "Windows",
          "name": "[concat(parameters('vmName'),'-disk0')]",
          "caching": "ReadWrite",
          "createOption": "FromImage",
          "managedDisk": {
            "storageAccountType": "[variables('VMDiskType')]"
          }
        }
      },
      "osProfile": {
        "computerName": "[variables('vmName')]",
        "adminUsername": "[parameters('adminName')]",
        "adminPassword": "[parameters('adminPass')]"
      },
      "networkProfile": {
        "networkInterfaces": [
          {
            "id": "[variables('nicId')]"
          }
        ]
      }
    }
  },
  {
    "type": "Microsoft.Compute/virtualMachines/extensions",
    "name": "[variables('ExtName')]",
    "apiVersion": "2018-06-01",
    "location": "[variables('location')]",
    "dependsOn": [
      "[variables('vmName')]"
    ],
    "properties": {
      "publisher": "Microsoft.Compute",
      "type": "CustomScriptExtension",
      "typeHandlerVersion": "1.9",
      "autoUpgradeMinorVersion": true,      
      "settings": {
          "fileUris": [
                "[uri(parameters('_artifactsLocation'), concat(variables('Script2Run'), parameters('_artifactsLocationSasToken')))]",
                "[variables('Sript2RunUri')]"
            ]
        },
      "protectedSettings": {
             "commandToExecute": "[ variables('cmdToExecute')]"
       }
    }
  }
],
"outputs": {
  "Host Name": {
    "type": "string",
    "value": "[reference(variables('pubIpId')).dnsSettings.fqdn]"
  },
  "UserName": {
    "type": "string",
    "value": "[parameters('adminName')]"
  },
  "pubIp": {
    "type":"string",
    "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('pubIpName'))).IpAddress]"
  }
}
}