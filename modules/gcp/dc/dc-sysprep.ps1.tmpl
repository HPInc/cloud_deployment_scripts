# Copyright Teradici Corporation 2019;  Â© Copyright 2023 HP Development Company, L.P.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

$BASE_DIR = "C:\Teradici"
$LOG_FILE = "$BASE_DIR\provisioning.log"
$ADMIN_PASSWORD_ID = "${admin_password_id}"
$ADMIN_PASSWORD    = $null

# Retry function, defaults to trying for 5 minutes with 10 seconds intervals
function Retry([scriptblock]$Action, $Interval = 10, $Attempts = 30) {
  $Current_Attempt = 0

  while ($true) {
    $Current_Attempt++
    $rc = $Action.Invoke()

    if ($?) { return $rc }

    if ($Current_Attempt -ge $Attempts) {
        Write-Error "--> ERROR: Failed after $Current_Attempt attempt(s)." -InformationAction Continue
        Throw
    }

    Write-Information "--> Attempt $Current_Attempt failed. Retry in $Interval seconds..." -InformationAction Continue
    Start-Sleep -Seconds $Interval
  }
}

function get_credentials(){
  Retry -Action {
    $script:ADMIN_PASSWORD = & gcloud secrets versions access latest --secret=$ADMIN_PASSWORD_ID --format="get(payload.data)" |
    ForEach-Object { [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($_)) }
  } -Interval 30 -Attempts 20
}

Start-Transcript -path $LOG_FILE -append

"================================================================"
"Get credentials from Secret Manager..."
"================================================================"
get_credentials

# Enforce TLS 1.2 as a precaution for deprecation of TLS prior versions
# Adding TLS 1.2 for Invoke-RestMethod
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

net user Administrator $ADMIN_PASSWORD /active:yes
