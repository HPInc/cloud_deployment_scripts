# Commented out lines represent defaults that can be changed.
# On Windows systems, the default backslash \ path separator must be changed 
# to forward slash / for any path variables.
# Example: gcp_credentials_file = "C:/path/to/gcp_cred.json"

gcp_credentials_file = "/path/to/gcp_cred.json"
gcp_project_id       = "your-project-1234"
gcp_service_account  = "service_account_name@<project_id>.iam.gserviceaccount.com"
# gcp_region           = "us-west2"
# gcp_zone             = "us-west2-b"

# Prefix to add to resources' names, max 5 characters to avoid cropping of
# workstation hostnames.
# prefix = ""

# By default, ICMP, SSH, RDP and WinRM are only allowed from the Terraform host.
# Define allowed_admin_cidrs to open the VPC firewall to additional IP addresses
# or CIDR. e.g. ["a.b.c.d/32", "e.f.g.0/24"]
# allowed_admin_cidrs = []

# By default, PCoIP clients are allowed from any IP (0.0.0.0/0). Define
# allowed_client_cidrs to restrict IP addresses from which PCoIP clients can
# connect to remote workstations. e.g. ["a.b.c.d/32", "e.f.g.0/24"]
# allowed_client_cidrs = ["0.0.0.0/0"]

# domain_name = "example.com"

# Optional: additional AD users to create
# domain_users_list = "/path/to/domain_users_list.csv"

# SSL Private Key & Certificate for Load Balancer
# ssl_key  = "/path/to/privkey.pem"
# ssl_cert = "/path/to/fullchain.pem"

# Specify the regions, zones, subnet CIDRs and number of connectors to create
# per region. For example:
#   cac_region_list         = ["us-west2",    "europe-west4",   "asia-southeast1"]
#   cac_zone_list           = ["us-west2-b",  "europe-west4-b", "asia-southeast1-b"]
#   cac_subnet_cidr_list    = ["10.0.1.0/24", "10.1.1.0/24",    "10.2.1.0/24"]
#   cac_instance_count_list = [2,             3,                4]

cac_region_list         = []
cac_zone_list           = []
cac_subnet_cidr_list    = []
cac_instance_count_list = []

# cac_machine_type = "n1-standard-2"
# cac_disk_size_gb = 50
# cac_disk_image = "projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20200807"

cac_admin_ssh_pub_key_file = "~/.ssh/id_rsa.pub"

# Specify the regions, zones, subnet CIDRs and number of workstations to create
# per region. For example:
# ws_region_list                  = ["us-west2",    "europe-west4",   "asia-southeast1"]
# ws_zone_list                    = ["us-west2-b",  "europe-west4-b", "asia-southeast1-b"]
# ws_subnet_cidr_list             = ["10.0.2.0/24", "10.1.2.0/24",    "10.2.2.0/24"]
# win_gfx_instance_count_list     = [0,             10,               0]
# win_std_instance_count_list     = [1,             1,                1]
# centos_gfx_instance_count_list  = [0,             0,                10]
# centos_std_instance_count_list  = [2,             2,                2]

ws_region_list                 = []
ws_zone_list                   = []
ws_subnet_cidr_list            = []
win_gfx_instance_count_list    = []
win_std_instance_count_list    = []
centos_gfx_instance_count_list = []
centos_std_instance_count_list = []

# win_gfx_machine_type = "n1-standard-4"
# win_gfx_accelerator_type = "nvidia-tesla-p4-vws"
# win_gfx_accelerator_count = 1
# win_gfx_disk_size_gb = 50
# win_gfx_disk_image = "projects/windows-cloud/global/images/windows-server-2019-dc-v20200813"

# win_std_machine_type = "n1-standard-4"
# win_std_disk_size_gb = 50
# win_std_disk_image = "projects/windows-cloud/global/images/windows-server-2019-dc-v20200813"

# centos_gfx_machine_type = "n1-standard-2"
# centos_gfx_accelerator_type = "nvidia-tesla-p4-vws"
# centos_gfx_accelerator_count = 1
# centos_gfx_disk_size_gb = 50
# centos_gfx_disk_image = "projects/centos-cloud/global/images/centos-7-v20200811"

# centos_std_machine_type = "n1-standard-2"
# centos_std_disk_size_gb = 50
# centos_std_disk_image = "projects/centos-cloud/global/images/centos-7-v20200811"

centos_admin_ssh_pub_key_file = "~/.ssh/id_rsa.pub"

###############
#   Secrets   #
###############
# The secrets below may be supplied in 2 formats:
#   1. plain text
#   2. KMS encrypted, base64 encoded
#
# For option 1, leave "kms_cryptokey_id" commented out and enter the plaintext
# passwords as strings in the variables below. Note that plaintext passwords
# may show in Terraform logs and .tfstate files, appear unencrypted in the
# storage bucket holding the provisioning scripts, as well as in the 
# provisioning scripts once downloaded by the VMs.
#
# For option 2, a user encrypts the secrets independent of these Terraform
# scripts. Once the secrets are encrypted with a KMS key, set "kms_cryptokey_id"
# to the KMS key used to encrypt the secrets, and enter the base64-encoded
# ciphertext as strings in the variables below. The GCP service account
# specified above in "gcp_service_account" must be in the same project and have
# KMS decryptor permissions for this key.
#
# Note Windows password complexity requirements:
# 1. Must not contain user's account name or display name
# 2. Must have 3 of the following categories:
#    a. a-z
#    b. A-Z
#    c. 0-9,
#    d. (~!@#$%^&*_-+=`|\(){}[]:;"'<>,.?/)
#    3. unicode characters
# See: https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/password-must-meet-complexity-requirements

# Uncomment and enter the KMS key ID if using encryption.
# kms_cryptokey_id = "projects/<project-id>/locations/<location>/keyRings/<keyring-name>/cryptoKeys/<key-name>"

# <-- Start of secrets section, do not edit this line. -->
dc_admin_password           = "SecuRe_pwd1"
safe_mode_admin_password    = "SecuRe_pwd2"
ad_service_account_password = "SecuRe_pwd3"
pcoip_registration_code     = "ABCDEFGHIJKL@0123-4567-89AB-CDEF"
cam_deployment_sa_file      = "/path/to/cloud-access-manager-service-account.json"
